<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	
	<!-- Factory bean that creates the Mongo instance -->
    <beans:bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
        <beans:property name="host" value="localhost" />
    </beans:bean>
    
    <beans:bean id="mongoCredentials" class="org.springframework.data.authentication.UserCredentials">
        <beans:constructor-arg name="username" value="" />
        <beans:constructor-arg name="password" value="" />
    </beans:bean>
     
    <!-- MongoTemplate for connecting and quering the documents in the database -->
    <beans:bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <beans:constructor-arg name="mongo" ref="mongo" />
        <beans:constructor-arg name="databaseName" value="clinic-portal" />
        <beans:constructor-arg name="userCredentials" ref="mongoCredentials"/>
    </beans:bean>
    
	<context:component-scan base-package="com.mnt.emr" />
    
	<beans:bean id="tilesViewResolver"
     class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
    </beans:bean>
 
    <beans:bean id="tilesConfigurer"  
        class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">  
        <beans:property name="definitions">  
            <beans:list>  
                <beans:value>/WEB-INF/tiles-defs/tiles.xml</beans:value>  
            </beans:list>  
        </beans:property>  
    </beans:bean>
    
    <beans:bean id="mapper" class="org.dozer.DozerBeanMapper">
	  <beans:property name="mappingFiles">
	    <beans:list>
	      <beans:value>dozer-global-configuration.xml</beans:value>			   
	      <beans:value>dozerBeanMapping.xml</beans:value>
	    </beans:list>
	  </beans:property>
	</beans:bean>
     
	
	
</beans:beans>
